// @flow
/*
  DOCUMENTATION: https://orbit.kiwi/components/alert-message/
*/
import * as React from "react";

import type { spaceAfter } from "../common/getSpacingToken/index";
import type { Globals, Translation } from "../common/common.js.flow";
import type { Props as AlertButtonProps } from "./AlertButton";

type Type = "info" | "success" | "warning" | "critical";

export type Props = {|
  +type?: Type,
  +children?: React.Node,
  +title?: Translation,
  +icon?: React.Element<any> | boolean,
  +closable?: boolean,
  +inlineActions?: React$Node,
  +onClose?: () => void | Promise<any>,
  ...Globals,
  ...spaceAfter,
|};

declare export var AlertButton: React.AbstractComponent<AlertButtonProps, HTMLButtonElement>;

declare export default React.ComponentType<Props>;

/* DOCS:
# Alert

To implement Alert component into your project you'll need to add the import:

```jsx
import Alert from "@kiwicom/orbit-components/lib/Alert";
```

After adding import into your project you can use it simply like:

```jsx
<Alert>Hello World!</Alert>
```
*/

/* FunctionalSpec:
## Functional specs

- By passing the `closable` prop into Alert, you will be able to handle `onClose` function and Close icon will be displayed. Also, if you want to select the Close Button element for testing purposes, use [data-test="AlertCloseButton"] selector.

- When the Alert has a `title` prop, if you pass an `icon` prop as `true`, the Alert will have its own icon based on the selected `type`. If you want to use a different icon, just pass it to the `icon` prop as a `React.Element`. Alerts without a `title` or with a `title` but without an `icon` prop don't have an icon.

- Passing a `inlineActions` will cause `children` to be ignored. `inlineActions` should be used for displaying buttons inside short alerts which only have a `title`.
*/
